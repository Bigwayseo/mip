define("mip-experiment/mip-experiment",["require","customElement","util"],function(t){function e(t){var e=t.querySelector('script[type="application/json"][for="mip-experiment"]'),i=e?e.innerHTML:"",n=t.hasAttribute("needConsole"),r="";try{r=JSON.parse(i)}catch(t){return void console.warn("<mip-experiment>配置不是合法JSON, "+t.message)}if(r)for(var s in r){var a=new o(s,r,n),l=a.getExpGroup();a.setExpGroup(l)}}var i=t("customElement").create(),n=t("util"),r=new n.customStorage(0),o=function(t,e,i){var n=e[t];this.expName=t,this.expVar=n.variants||{},this.expVar.default=100,this.needConsole=i,this.isSticky=n.hasOwnProperty("sticky")?!!n.sticky:!0};return o.prototype.getExpGroup=function(){var t=this._getExpGroupFromUrl();if(this.needConsole)console.log("实验名: "+this.expName),console.log("URL hash分组生效: "+t);var e="";if(this.isSticky&&!t)if(e=this._getExpGroupFromStorage(),this.needConsole)console.log("历史分组生效: "+e);if(!e&&!t){var i=this._getExpGroupNew();if(this.needConsole)console.log("重新分组: "+i)}var n=t||e||i;if(this.needConsole)console.log("最终分组: "+n+"\n\n");return n},o.prototype._getExpGroupFromUrl=function(){var t=window.location.hash.slice(1),e="";if(!t)return"";var i=t.split("&");for(var n in i)if(i[n].match(this.expName+"=")){var r=new RegExp("mip-x-"+this.expName+"=(\\w+)"),o=r.exec(i[n])[1];e=o in this.expVar?o:""}else;return e},o.prototype._getExpGroupFromStorage=function(){var t=r.get("mip-x-"+this.expName);return t in this.expVar?t:""},o.prototype._getExpGroupNew=function(){for(var t=100*Math.random(),e=Object.keys(this.expVar),i=0;i<e.length-1;i++){var n=this._addVars(i,this.expVar),r=this._addVars(i+1,this.expVar);if(0===i&&t<this.expVar[e[0]])return e[0];if(t>=n&&t<r)return e[i+1];else if(t>r)continue}return"default"},o.prototype._addVars=function(t,e){var i=Object.keys(e);if(0===t)return e[i[0]];else return e[i[t]]+arguments.callee(t-1,e)},o.prototype.setExpGroup=function(t){if(r.set("mip-x-"+this.expName,t),"default"!==t)document.querySelector("body").setAttribute("mip-x-"+this.expName,t)},i.prototype.build=function(){var t=this.element;t.needConsole=t.hasAttribute("needConsole"),e(t),n.css(t,"display","inherit")},i}),define("mip-experiment",["mip-experiment/mip-experiment"],function(t){return t}),function(){function t(t,e){t.registerMipElement("mip-experiment",e,"")}if(window.MIP)require(["mip-experiment"],function(e){t(window.MIP,e)});else require(["mip","mip-experiment"],t)}();